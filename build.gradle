plugins {
    id 'application'
    id 'org.beryx.jlink' version '3.1.1'
}

repositories {
    mavenCentral()
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

/* ---- JavaFX 플랫폼 분기 ---- */
ext {
    javafxVer = '21.0.4'
    def os = org.gradle.internal.os.OperatingSystem.current()
    javafxClassifier = os.isMacOsX()
            ? (System.getProperty("os.arch").contains("aarch64") ? "mac-aarch64" : "mac")
            : (os.isWindows() ? "win" : "linux")
}

application {
    mainClass = 'com.example.organizer.App'
}

tasks.named('run') {
    doFirst {
        jvmArgs = [
                "--module-path", classpath.asPath,
                "--add-modules", "javafx.controls,javafx.fxml"
        ]
    }
}

/* ---- 여기 포인트! JavaFX는 base/graphics/controls/fxml 네 개를 모두,
   각자 플랫폼 classifier와 함께 넣어야 런타임 네이티브가 따라옵니다. ---- */
dependencies {
    implementation "org.openjfx:javafx-base:${javafxVer}:${javafxClassifier}"
    implementation "org.openjfx:javafx-graphics:${javafxVer}:${javafxClassifier}"
    implementation "org.openjfx:javafx-controls:${javafxVer}:${javafxClassifier}"
    //implementation "org.openjfx:javafx-fxml:${javafxVer}:${javafxClassifier}"

    implementation "org.xerial:sqlite-jdbc:3.46.0.1"
}

/* ---- jlink(선택): 모듈을 직접 안 쓰는(Classpath) 프로젝트라 힌트를 살짝 줍니다. ---- */
jlink {
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = 'TodoProgram'
    }
    addExtraDependencies("javafx")   // ✅ JavaFX 모듈 자동 추가
    /* 소스에 module-info.java가 없으니 merged module을 만들어 의존 모듈을 명시 */
    mergedModule {
        requires 'java.sql'
        requires 'javafx.base'
        requires 'javafx.graphics'
        requires 'javafx.controls'
        requires 'javafx.fxml'
    }
}
